import 'package:flame/flame.dart';
import 'package:flame/game.dart';
import 'package:flutter/material.dart';
import 'package:warframe/cycle_of_life/cycle_of_life.dart';
import 'package:warframe/cycle_of_life/cycle_of_life_container.dart';

void main(){
  WidgetsFlutterBinding.ensureInitialized();
   Flame.device.setPortrait();

  final myGame = MyGame();

  runApp(
    MaterialApp(
      home: GameScreen(myGame: myGame),

    )
    
  );
}

class GameScreen extends StatefulWidget{
  final MyGame myGame;

  const GameScreen({Key? key, required this.myGame}) : super(key: key);


  @override
  State<StatefulWidget> createState() => _GameScreen();

}

class _GameScreen extends State<GameScreen>{


  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text("Game Of Life"),
      ),
      body: Column(
        children: <Widget>[
          Expanded(
            child: GameWidget(
              game: widget.myGame
            ),
          ),
          Center(
            child: Row(
              mainAxisAlignment: MainAxisAlignment.center,
              children: [
                Padding(
                  padding: const EdgeInsets.all(8.0),
                  child: ElevatedButton(
                    child: Text(
                      widget.myGame.paused
                      ? 'Paused'
                      : 'Playing'
                    ),
                    onPressed: (){
                      if(widget.myGame.paused){
                        setState(() => widget.myGame.resumeEngine());
                      }else{
                        setState(() => widget.myGame.pauseEngine());
                      }
                    },
                  ),
                ),
                Padding(
                  padding: const EdgeInsets.all(8.0),
                  child: ElevatedButton(
                    child: const Text('Restart'),
                    onPressed: (){
                      setState(() => widget.myGame.restart());
                    },
                  ),
                ),
              ],
            ),
          )
        ],
      ),
    );
  }

}



class MyGame extends FlameGame {
  @override
  Color backgroundColor() => const Color.fromARGB(255, 255, 255, 255);


  MyGame();

  /*
    25




  */
  String map1 = 
// 0         10        20   25   30        40      49 
  '00000000000000000000000000000000000000000000000000'//0
  '00000000000000000000000000000000000000000000000000'
  '00000000000000000000000000000000000000000000000000'
  '00000000000000000000000000000000000000000000000000'
  '00000000000000000000000000100000000000000000000000'
  '00000000000000000000000010100000000000000000000000'//5
  '00000000000000110000001100000000000011000000000000'
  '00000000000001000100001100000000000011000000000000'
  '00110000000010000010001100000000000000000000000000'
  '00110000000010001011000010100000000000000000000000'
  '00000000000010000010000000100000000000000000000000'//10
  '00000000000001000100000000000000000000000000000000'
  '00000000000000110000000000000000000000000000000000'
  '00000000000000000000000000000000000000000000000000'
  '00000000000000000000000000000000000000000000000000'
  '00000000000000000000000000000000000000000000000000'//15
  '00000000000000000000000000000000000000000000000000'
  '00000000000000000000000000000000000000000000000000'
  '00000000000000000000000000000000000000000000000000'
  '00000000000000000000000000000000000000000000000000'
  '00000000000000000000000000000000000000000000000000'//20
  '00000000000000000000000000000000000000000000000000'
  '00000000000000000000000000000000000000000000000000'
  '00000000000000000000000000000000000000000000000000'
  '00000000000000000000000000000000000000000000000000'
  '00000000000000000000000000000000000000000000000000'//25
  '00000000000000000000000000000000000000000000000000'
  '00000000000000000000000000000000000000000000000000'
  '00000000000000000000000000000000000000000000000000'
  '00000000000000000000000000000000000000000000000000'
  '00000000000000000000000000000000000000000000000000'//30
  '00000000000000000000000000000000000000000000000000'
  '00000000000000000000000000000000000000000000000000'
  '00000000000000000000000000000000000000000000000000'
  '00000000000000000000000000000000000000000000000000'
  '00000000000000000000000000000000000000000000000000'//35
  '00000000000000000000000000000000000000000000000000'
  '00000000000000000000000000000000000000000000000000'
  '00000000000000000000000000000000000000000000000000'
  '00000000000000000000000000000000000000000000000000'
  '00000000000000000000000000000000000000000000000000'//40
  '00000000000000000000000000000000000000000000000000'
  '00000000000000000000000000000000000000000000000000'
  '00000000000000000000000000000000000000000000000000'
  '00000000000000000000000000000000000000000000000000'
  '00000000000000000000000000000000000000000000000000'//45
  '00000000000000000000000000000000000000000000000000'
  '00000000000000000000000000000000000000000000000000'
  '00000000000000000000000000000000000000000000000000'
  '00000000000000000000000000000000000000000000000000'//49
  ;

  List<String> map2 = [
// 0         10        20   25   30        40      49 
  '00000000000000000000000000000000000000000000000000',//0
  '00000000000000000000000000000000000000000000000000',
  '00000000000000000000000000000000000000000000000000',
  '00000000000000000000000000000000000000000000000000',
  '00000000000000000000000000100000000000000000000000',
  '00000000000000000000000010100000000000000000000000',//5
  '00000000000000110000001100000000000011000000000000',
  '00000000000001000100001100000000000011000000000000',
  '00110000000010000010001100000000000000000000000000',
  '00110000000010001011000010100000000000000000000000',
  '00000000000010000010000000100000000000000000000000',//10
  '00000000000001000100000000000000000000000000000000',
  '00000000000000110000000000000000000000000000000000',
  '00000000000000000000000000000000000000000000000000',
  '00000000000000000000000000000000000000000000000000',
  '00000000000000000000000000000000000000000000000000',//15
  '00000000000000000000000000000000000000000000000000',
  '00000000000000000000000000000000000000000000000000',
  '00000000000000000000000000000000000000000000000000',
  '00000000000000000000000000000000000000000000000000',
  '00000000000000000000000000000000000000000000000000',//20
  '00000000000000000000000000000000000000000000000000',
  '00000000000000000000000000000000000000000000000000',
  '00000000000000000000000000000000000000000000000000',
  '00000000000000000000000000000000000000000000000000',
  '00000000000000000000000000000000000000000000000000',//25
  '00000000000000000000000000000000000000000000000000',
  '00000000000000000000000000000000000000000000000000',
  '00000000000000000000000000000000000000000000000000',
  '00000000000000000000000000000000000000000000000000',
  '00000000000000000000000000000000000000000000000000',//30
  '00000000000000000000000000000000000000000000000000',
  '00000000000000000000000000000000000000000000000000',
  '00000000000000000000000000000000000000000000000000',
  '00000000000000000000000000000000000000000000000000',
  '00000000000000000000000000000000000000000000000000',//35
  '00000000000000000000000000000000000000000000000000',
  '00000000000000000000000000000000000000000000000000',
  '00000000000000000000000000000000000000000000000000',
  '00000000000000000000000000000000000000000000000000',
  '00000000000000000000000000000000000000000000000000',//40
  '00000000000000000000000000000000000000000000000000',
  '00000000000000000000000000000000000000000000000000',
  '00000000000000000000000000000000000000000000000000',
  '00000000000000000000000000000000000000000000000000',
  '00000000000000000000000000000000000000000000000000',//45
  '00000000000000000000000000000000000000000000000000',
  '00000000000000000000000000000000000000000000000000',
  '00000000000000000000000000000000000000000000000000',
  '00000000000000000000000000000000000000000000000000'
  ];
  


  CycleOfLifeContainer newCOLC(){
    final cycleOfLife = CycleOfLife.createWorld(width: 50, height: 50);
    cycleOfLife.setupWorld(list01: map2);
    //cycleOfLife.setupWorld(string01: map1);

    final colc = CycleOfLifeContainer(
      cycleOfLife,
      width: 400,
      height: 400,
      x0: 10,
      y0: 100,
    );
    return colc;
  }

  @override
  Future<void> onLoad() async {

    add(
      newCOLC()
    );

    return super.onLoad();
  }

  void restart() {
    remove(children.firstWhere((value) => value is CycleOfLifeContainer));
    add(
      newCOLC()
    );
  }
 
}